# Remap prefix to <C-a>
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# Vim all the things
set-option -g status-keys vi
set-window-option -g mode-keys vi
set-window-option -g xterm-keys on

# Make the splits behave like Vim's.
unbind-key %
bind-key s split-window -v -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# Make new panes open with the same working directory.
bind-key c new-window -c '#{pane_current_path}'

# Move around panes like Vim, making tmux smart enough to switch between Vim and
# tmux splits. Anytime an application uses one of the bindings, it will need to
# be added to the grep pattern, otherwise tmux will swallow the keys.
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq 'vim\\|mutt' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq 'vim\\|mutt' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq 'vim\\|mutt' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq 'vim\\|mutt' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq 'vim\\|mutt' && tmux send-keys 'C-\\') || tmux select-pane -l"
unbind-key h
unbind-key j
unbind-key k
bind-key l last-window

bind-key H swap-pane -U
bind-key L swap-pane -D

# Resize panes like Vim
bind-key < resize-pane -L 5
bind-key > resize-pane -R 5
bind-key + resize-pane -U 5
bind-key - resize-pane -D 5

# Send keys to all the panes for the current window.
bind-key y set-window-option synchronize-panes

# Turn off escape delay
set-option -sg escape-time 0

# Resource the config
unbind-key r
bind-key r source-file ~/.config/tmux/tmux.conf \; display "Resourced tmux configuration"

# Left-most tab should be the left-most key
set-option -g base-index 1
set-option -g pane-base-index 1

set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',alacritty:RGB'

set-window-option -g automatic-rename on

# Tick tock
set-window-option -g clock-mode-style 24

# Fix the mouse
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Copy/paste
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namepsace pbcopy"
# Sometimes I don't want to drop back down to the prompt after yanking.
bind-key -T copy-mode-vi Y send -X copy-pipe "reattach-to-user-namepsace pbcopy"
bind-key P run-shell "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"

# Open some applications in a popup.
# command line
bind -n M-c display-popup -E -h 90% -w 90%
# htop
bind -n M-h display-popup -E -h 90% -w 90% "htop"
# mail
bind -n M-m display-popup -E -h 90% -w 90% "neomutt"
# Python
bind -n M-p display-popup -E -h 90% -w 90% "bpython"

set-option -g history-limit 50000

bind-key o choose-session

# Highlight the session when the prefix has been pressed and it active.
set-option -g status-left "#{?client_prefix,#[reverse][#S]#[noreverse],[#S]} "

# Enable focus events for Neovim.
set-option -g focus-events on

# Use Dracula.
set-option -g @plugin "dracula/tmux"
set-option -g @dracula-battery-colors "dark_purple white"
set-option -g @dracula-border-contrast true
set-option -g @dracula-cpu-usage-colors "gray white"
set-option -g @dracula-cpu-usage-label " "
set-option -g @dracula-plugins "ram-usage cpu-usage time battery"
set-option -g @dracula-ram-usage-colors "gray white"
set-option -g @dracula-ram-usage-label " "
set-option -g @dracula-show-flags true
set-option -g @dracula-show-left-icon session
set-option -g @dracula-time-colors "gray white"

run-shell -b "~/.config/tmux/plugins/tpm/tpm"
